//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8662
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Reportes {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReportes")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReportes : global::System.Data.DataSet {
        
        private dtCliEmpGenDataTable tabledtCliEmpGen;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsReportes() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsReportes(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtCliEmpGen"] != null)) {
                    base.Tables.Add(new dtCliEmpGenDataTable(ds.Tables["dtCliEmpGen"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCliEmpGenDataTable dtCliEmpGen {
            get {
                return this.tabledtCliEmpGen;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsReportes cln = ((dsReportes)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtCliEmpGen"] != null)) {
                    base.Tables.Add(new dtCliEmpGenDataTable(ds.Tables["dtCliEmpGen"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtCliEmpGen = ((dtCliEmpGenDataTable)(base.Tables["dtCliEmpGen"]));
            if ((initTable == true)) {
                if ((this.tabledtCliEmpGen != null)) {
                    this.tabledtCliEmpGen.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsReportes";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReportes.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtCliEmpGen = new dtCliEmpGenDataTable();
            base.Tables.Add(this.tabledtCliEmpGen);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCliEmpGen() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReportes ds = new dsReportes();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtCliEmpGenRowChangeEventHandler(object sender, dtCliEmpGenRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCliEmpGenDataTable : global::System.Data.TypedTableBase<dtCliEmpGenRow> {
            
            private global::System.Data.DataColumn columnCedula;
            
            private global::System.Data.DataColumn columnCodigoEmpleado;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnFechaIngreso;
            
            private global::System.Data.DataColumn columnFechaEgreso;
            
            private global::System.Data.DataColumn columnCorreo;
            
            private global::System.Data.DataColumn columnTelefono;
            
            private global::System.Data.DataColumn columnZona;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnEmpresa;
            
            private global::System.Data.DataColumn columnTipoEmpleado;
            
            private global::System.Data.DataColumn columnUnidadNegocio;
            
            private global::System.Data.DataColumn columnGerencia;
            
            private global::System.Data.DataColumn columnCargo;
            
            private global::System.Data.DataColumn columnEmpleadoActivo;
            
            private global::System.Data.DataColumn columnBeneficio1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenDataTable() {
                this.TableName = "dtCliEmpGen";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCliEmpGenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCliEmpGenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CedulaColumn {
                get {
                    return this.columnCedula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoEmpleadoColumn {
                get {
                    return this.columnCodigoEmpleado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaIngresoColumn {
                get {
                    return this.columnFechaIngreso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEgresoColumn {
                get {
                    return this.columnFechaEgreso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CorreoColumn {
                get {
                    return this.columnCorreo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZonaColumn {
                get {
                    return this.columnZona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoEmpleadoColumn {
                get {
                    return this.columnTipoEmpleado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadNegocioColumn {
                get {
                    return this.columnUnidadNegocio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GerenciaColumn {
                get {
                    return this.columnGerencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargoColumn {
                get {
                    return this.columnCargo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpleadoActivoColumn {
                get {
                    return this.columnEmpleadoActivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Beneficio1Column {
                get {
                    return this.columnBeneficio1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenRow this[int index] {
                get {
                    return ((dtCliEmpGenRow)(this.Rows[index]));
                }
            }
            
            public event dtCliEmpGenRowChangeEventHandler dtCliEmpGenRowChanging;
            
            public event dtCliEmpGenRowChangeEventHandler dtCliEmpGenRowChanged;
            
            public event dtCliEmpGenRowChangeEventHandler dtCliEmpGenRowDeleting;
            
            public event dtCliEmpGenRowChangeEventHandler dtCliEmpGenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCliEmpGenRow(dtCliEmpGenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenRow AdddtCliEmpGenRow(
                        string Cedula, 
                        string CodigoEmpleado, 
                        string Nombre, 
                        System.DateTime FechaIngreso, 
                        System.DateTime FechaEgreso, 
                        string Correo, 
                        string Telefono, 
                        string Zona, 
                        string Region, 
                        string Empresa, 
                        string TipoEmpleado, 
                        string UnidadNegocio, 
                        string Gerencia, 
                        string Cargo, 
                        bool EmpleadoActivo, 
                        string Beneficio1) {
                dtCliEmpGenRow rowdtCliEmpGenRow = ((dtCliEmpGenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cedula,
                        CodigoEmpleado,
                        Nombre,
                        FechaIngreso,
                        FechaEgreso,
                        Correo,
                        Telefono,
                        Zona,
                        Region,
                        Empresa,
                        TipoEmpleado,
                        UnidadNegocio,
                        Gerencia,
                        Cargo,
                        EmpleadoActivo,
                        Beneficio1};
                rowdtCliEmpGenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCliEmpGenRow);
                return rowdtCliEmpGenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtCliEmpGenDataTable cln = ((dtCliEmpGenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCliEmpGenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCedula = base.Columns["Cedula"];
                this.columnCodigoEmpleado = base.Columns["CodigoEmpleado"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnFechaIngreso = base.Columns["FechaIngreso"];
                this.columnFechaEgreso = base.Columns["FechaEgreso"];
                this.columnCorreo = base.Columns["Correo"];
                this.columnTelefono = base.Columns["Telefono"];
                this.columnZona = base.Columns["Zona"];
                this.columnRegion = base.Columns["Region"];
                this.columnEmpresa = base.Columns["Empresa"];
                this.columnTipoEmpleado = base.Columns["TipoEmpleado"];
                this.columnUnidadNegocio = base.Columns["UnidadNegocio"];
                this.columnGerencia = base.Columns["Gerencia"];
                this.columnCargo = base.Columns["Cargo"];
                this.columnEmpleadoActivo = base.Columns["EmpleadoActivo"];
                this.columnBeneficio1 = base.Columns["Beneficio1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCedula = new global::System.Data.DataColumn("Cedula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCedula);
                this.columnCodigoEmpleado = new global::System.Data.DataColumn("CodigoEmpleado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigoEmpleado);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnFechaIngreso = new global::System.Data.DataColumn("FechaIngreso", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaIngreso);
                this.columnFechaEgreso = new global::System.Data.DataColumn("FechaEgreso", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEgreso);
                this.columnCorreo = new global::System.Data.DataColumn("Correo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorreo);
                this.columnTelefono = new global::System.Data.DataColumn("Telefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefono);
                this.columnZona = new global::System.Data.DataColumn("Zona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZona);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnEmpresa = new global::System.Data.DataColumn("Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa);
                this.columnTipoEmpleado = new global::System.Data.DataColumn("TipoEmpleado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoEmpleado);
                this.columnUnidadNegocio = new global::System.Data.DataColumn("UnidadNegocio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidadNegocio);
                this.columnGerencia = new global::System.Data.DataColumn("Gerencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGerencia);
                this.columnCargo = new global::System.Data.DataColumn("Cargo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargo);
                this.columnEmpleadoActivo = new global::System.Data.DataColumn("EmpleadoActivo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpleadoActivo);
                this.columnBeneficio1 = new global::System.Data.DataColumn("Beneficio1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeneficio1);
                this.Locale = new global::System.Globalization.CultureInfo("es-CO");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenRow NewdtCliEmpGenRow() {
                return ((dtCliEmpGenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCliEmpGenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtCliEmpGenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCliEmpGenRowChanged != null)) {
                    this.dtCliEmpGenRowChanged(this, new dtCliEmpGenRowChangeEvent(((dtCliEmpGenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCliEmpGenRowChanging != null)) {
                    this.dtCliEmpGenRowChanging(this, new dtCliEmpGenRowChangeEvent(((dtCliEmpGenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCliEmpGenRowDeleted != null)) {
                    this.dtCliEmpGenRowDeleted(this, new dtCliEmpGenRowChangeEvent(((dtCliEmpGenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCliEmpGenRowDeleting != null)) {
                    this.dtCliEmpGenRowDeleting(this, new dtCliEmpGenRowChangeEvent(((dtCliEmpGenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCliEmpGenRow(dtCliEmpGenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReportes ds = new dsReportes();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCliEmpGenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCliEmpGenRow : global::System.Data.DataRow {
            
            private dtCliEmpGenDataTable tabledtCliEmpGen;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCliEmpGenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCliEmpGen = ((dtCliEmpGenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cedula {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.CedulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cedula\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.CedulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CodigoEmpleado {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.CodigoEmpleadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodigoEmpleado\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.CodigoEmpleadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaIngreso {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtCliEmpGen.FechaIngresoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaIngreso\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.FechaIngresoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEgreso {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtCliEmpGen.FechaEgresoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaEgreso\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.FechaEgresoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Correo {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.CorreoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Correo\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.CorreoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefono {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.TelefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefono\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.TelefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zona {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.ZonaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zona\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.ZonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.EmpresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Empresa\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.EmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TipoEmpleado {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.TipoEmpleadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TipoEmpleado\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.TipoEmpleadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnidadNegocio {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.UnidadNegocioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnidadNegocio\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.UnidadNegocioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Gerencia {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.GerenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gerencia\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.GerenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cargo {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.CargoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cargo\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.CargoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmpleadoActivo {
                get {
                    try {
                        return ((bool)(this[this.tabledtCliEmpGen.EmpleadoActivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpleadoActivo\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.EmpleadoActivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Beneficio1 {
                get {
                    try {
                        return ((string)(this[this.tabledtCliEmpGen.Beneficio1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Beneficio1\' in table \'dtCliEmpGen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCliEmpGen.Beneficio1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCedulaNull() {
                return this.IsNull(this.tabledtCliEmpGen.CedulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCedulaNull() {
                this[this.tabledtCliEmpGen.CedulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoEmpleadoNull() {
                return this.IsNull(this.tabledtCliEmpGen.CodigoEmpleadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoEmpleadoNull() {
                this[this.tabledtCliEmpGen.CodigoEmpleadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tabledtCliEmpGen.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tabledtCliEmpGen.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaIngresoNull() {
                return this.IsNull(this.tabledtCliEmpGen.FechaIngresoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaIngresoNull() {
                this[this.tabledtCliEmpGen.FechaIngresoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaEgresoNull() {
                return this.IsNull(this.tabledtCliEmpGen.FechaEgresoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaEgresoNull() {
                this[this.tabledtCliEmpGen.FechaEgresoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCorreoNull() {
                return this.IsNull(this.tabledtCliEmpGen.CorreoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCorreoNull() {
                this[this.tabledtCliEmpGen.CorreoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonoNull() {
                return this.IsNull(this.tabledtCliEmpGen.TelefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonoNull() {
                this[this.tabledtCliEmpGen.TelefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZonaNull() {
                return this.IsNull(this.tabledtCliEmpGen.ZonaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZonaNull() {
                this[this.tabledtCliEmpGen.ZonaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tabledtCliEmpGen.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tabledtCliEmpGen.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresaNull() {
                return this.IsNull(this.tabledtCliEmpGen.EmpresaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresaNull() {
                this[this.tabledtCliEmpGen.EmpresaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoEmpleadoNull() {
                return this.IsNull(this.tabledtCliEmpGen.TipoEmpleadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoEmpleadoNull() {
                this[this.tabledtCliEmpGen.TipoEmpleadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadNegocioNull() {
                return this.IsNull(this.tabledtCliEmpGen.UnidadNegocioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadNegocioNull() {
                this[this.tabledtCliEmpGen.UnidadNegocioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGerenciaNull() {
                return this.IsNull(this.tabledtCliEmpGen.GerenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGerenciaNull() {
                this[this.tabledtCliEmpGen.GerenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargoNull() {
                return this.IsNull(this.tabledtCliEmpGen.CargoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargoNull() {
                this[this.tabledtCliEmpGen.CargoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpleadoActivoNull() {
                return this.IsNull(this.tabledtCliEmpGen.EmpleadoActivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpleadoActivoNull() {
                this[this.tabledtCliEmpGen.EmpleadoActivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeneficio1Null() {
                return this.IsNull(this.tabledtCliEmpGen.Beneficio1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeneficio1Null() {
                this[this.tabledtCliEmpGen.Beneficio1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCliEmpGenRowChangeEvent : global::System.EventArgs {
            
            private dtCliEmpGenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenRowChangeEvent(dtCliEmpGenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCliEmpGenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591